#!/bin/bash
work_dir=$(readlink -f $(dirname $0))
mode=$1
user=${MYSQL_LOGIN_USERNAME:-root}

master_port=13306
slave1_port=13316

usage() {
    cat <<__USAGE__
 docker-mysql <sub-command>
 
 sub-command:
   master:
     connect to master mysql server
   slave1:
     connect to slave1 mysql server
   start:
     start all mysql server
   stop:
     stop all mysql server
   alter:
     alter <hostname> <sql file>

__USAGE__
}

alter() {
    local host=$1
    local sql=$2

    if [[ -f $sql ]] ; then
        echo "Could not find alter sql file. ($sql)"
        exit 1
    fi

    case $host in
        master)
            mysql -u $user -h 127.0.0.1 -P $master_port < $sql
            ;;
        slave1)
            mysql -u $user -h 127.0.0.1 -P $slave1_port < $sql
            ;;
        *)
            echo "unknown host: $host."
            exit 1;
    esac
}

case $mode in
    master)
        mysql -u $user -h 127.0.0.1 -P $master_port
        ;;
    slave1)
        mysql -u $user -h 127.0.0.1 -P $slave1_port
        ;;
    start)
        cd $work_dir
        mkdir -p sqls

        echo "docker run mysql-master"
        ./master/start-master.sh

        echo "docker run mysql-slave1"
        ./slave1/start-slave1.sh

        echo "initdb"
        for sql in `find sqls ! -path sqls`
        do
            echo -n "which database exec $sql (please input databasename)? > "
            read dbname
            mysql -u root -h 127.0.0.1 -P $master_port -e "create database $dbname"
            mysql -u root -h 127.0.0.1 -P $master_port $dbname < $sql
        done

        echo "finished"
        ;;
    stop)
        echo "docker rm mysql-master"
        docker rm -f mysql-master
        echo "docker rm mysql-slave1"
        docker rm -f mysql-slave1
        ;;
    alter)
        echo "start alter"
        alter $2 $3
        ;;
    *)
        echo "you should specify first argument that is mode such as a 'master' or 'slave1'."
        exit 1
        ;;
esac
